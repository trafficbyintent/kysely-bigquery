name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      message:
        description: 'Release message for changelog'
        required: true

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Configure Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
    
    - name: Get current version
      id: current-version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Bump version
      id: bump
      run: |
        npm version ${{ github.event.inputs.release-type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: Update CHANGELOG
      run: |
        DATE=$(date +%Y-%m-%d)
        NEW_VERSION=${{ steps.bump.outputs.new-version }}
        
        # Create temporary changelog entry
        cat > changelog_entry.tmp << EOF
        ## [$NEW_VERSION] - $DATE
        
        ${{ github.event.inputs.message }}
        
        EOF
        
        # Insert new entry after the header
        if [ -f CHANGELOG.md ]; then
          head -n 2 CHANGELOG.md > CHANGELOG.new
          cat changelog_entry.tmp >> CHANGELOG.new
          tail -n +3 CHANGELOG.md >> CHANGELOG.new
          mv CHANGELOG.new CHANGELOG.md
        else
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          cat changelog_entry.tmp >> CHANGELOG.md
        fi
        
        rm changelog_entry.tmp
    
    - name: Create release branch
      run: |
        BRANCH_NAME="release/v${{ steps.bump.outputs.new-version }}"
        git checkout -b $BRANCH_NAME
        git add package.json CHANGELOG.md
        git commit -m "chore: release v${{ steps.bump.outputs.new-version }}"
        git push origin $BRANCH_NAME
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: release/v${{ steps.bump.outputs.new-version }}
        title: "Release v${{ steps.bump.outputs.new-version }}"
        body: |
          ## Release v${{ steps.bump.outputs.new-version }}
          
          This PR prepares the release of version ${{ steps.bump.outputs.new-version }}.
          
          ### Changes
          - Bumped version from ${{ steps.current-version.outputs.version }} to ${{ steps.bump.outputs.new-version }}
          - Updated CHANGELOG.md
          
          ### Release Notes
          ${{ github.event.inputs.message }}
          
          ### Next Steps
          1. Review and merge this PR
          2. Create and push a tag: `git tag v${{ steps.bump.outputs.new-version }} && git push origin v${{ steps.bump.outputs.new-version }}`
          3. The release workflow will automatically publish to npm
        labels: release